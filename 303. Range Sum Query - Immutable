class NumArray(object):

    def __init__(self, nums):
        """
        :type nums: List[int]
        """
        l=[nums[0]] #store first element of the array to start prefix sum
        for i in range(1,len(nums)):
            l.append(l[i-1]+nums[i]) #implement prefix sum for each element
        self.arr=l   
        

    def sumRange(self, left, right):
        """
        :type left: int
        :type right: int
        :rtype: int
        """
        if(left!=0): #Apply the logic of prefix sum to get the sum of elements between and including left and right.
            return(self.arr[right]-self.arr[left-1]) 
        else: #in case left is 0,the sum in the 'right' position will give the total sum required
            return(self.arr[right])
